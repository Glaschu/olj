server {
    listen 80;
    server_name localhost;

    # Enable CORS for all origins
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';

    # Handle preflight requests
    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-Requested-With';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Log all requests
        access_log /var/log/nginx/lineage_access.log;
        
        # Return success for all lineage events
        return 200 '{"status": "received", "timestamp": "$time_iso8601", "method": "$request_method", "uri": "$request_uri"}';
        add_header 'Content-Type' 'application/json';
    }

    # Health check endpoint
    location /health {
        return 200 '{"status": "healthy", "service": "mock-openlineage"}';
        add_header 'Content-Type' 'application/json';
    }

    # API v1 lineage endpoint (what OpenLineage uses)
    location /api/v1/lineage {
        # Log the full request
        access_log /var/log/nginx/lineage_events.log;
        
        # Return success for all POST requests
        if ($request_method = POST) {
            return 201 '{"status": "created", "timestamp": "$time_iso8601", "message": "Lineage event received successfully"}';
        }
        
        # Return method not allowed for other methods
        return 405 '{"error": "Method not allowed", "allowed_methods": ["POST"]}';
        add_header 'Content-Type' 'application/json';
    }
}
